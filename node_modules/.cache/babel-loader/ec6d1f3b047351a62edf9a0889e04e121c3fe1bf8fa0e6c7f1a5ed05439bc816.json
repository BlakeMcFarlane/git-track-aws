{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blake\\\\LearnReact\\\\React\\\\git-track\\\\client\\\\src\\\\components\\\\Languages.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../styling/languages.css';\nimport './LanguageFocus';\nimport { useState, useEffect } from 'react';\nimport LanguageFocus from './LanguageFocus';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Languages = ({\n  userRepos\n}) => {\n  _s();\n  const [topLanguages, setTopLanguages] = useState([]);\n  const [selectedLanguage, setSelectedLanguage] = useState();\n  const [selectedLanguageRatio, setSelectedLanguageRatio] = useState();\n  const [languageRepos, setLanguageRepos] = useState([]); // New state for repositories of the selected language\n\n  const colors = ['#FF6666', '#63618E', '#FFA500', '#20B2AA', '#FFD700', '#D3FFCE', '#F633FF', '#FF8833', '#33FF88', '#8833FF'];\n  useEffect(() => {\n    if (!userRepos) return;\n    const languageCount = {};\n    let totalSize = 0;\n    userRepos.forEach(repo => {\n      Object.keys(repo.languages).forEach(language => {\n        const languageValue = repo.languages[language];\n        languageCount[language] = (languageCount[language] || 0) + languageValue;\n        totalSize += languageValue;\n      });\n    });\n    const languagePercentages = Object.fromEntries(Object.entries(languageCount).map(([language, count]) => [language, count / totalSize * 100]));\n    const sortedLanguages = Object.entries(languagePercentages).sort((a, b) => b[1] - a[1]).slice(0, 6);\n    setTopLanguages(sortedLanguages);\n    if (sortedLanguages.length > 0) {\n      setSelectedLanguage(sortedLanguages[0][0]);\n      setSelectedLanguageRatio(sortedLanguages[0][1].toFixed(1));\n      filterLanguageRepos(sortedLanguages[0][0]);\n    }\n  }, [userRepos]);\n  const handleLanguageClick = language => {\n    setSelectedLanguage(language);\n    const languageData = topLanguages.find(([lang, _]) => lang === language);\n    if (languageData) {\n      setSelectedLanguageRatio(languageData[1].toFixed(1));\n    }\n    filterLanguageRepos(language);\n  };\n  const filterLanguageRepos = language => {\n    const filteredRepos = userRepos.filter(repo => repo.languages.hasOwnProperty(language));\n    setLanguageRepos(filteredRepos);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"languages\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"LANGUAGES\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list\",\n          children: /*#__PURE__*/_jsxDEV(\"ol\", {\n            className: \"language\",\n            children: topLanguages.map(([language, _percentage], index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"language-item\",\n              onClick: () => handleLanguageClick(language),\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"language-color\",\n                style: {\n                  backgroundColor: colors[index % colors.length]\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"language-name\",\n                  children: language\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 40\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 37\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-focus\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"focus\",\n          children: /*#__PURE__*/_jsxDEV(LanguageFocus, {\n            language: selectedLanguage,\n            languageRatio: selectedLanguageRatio\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-bar-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-bar\",\n        children: topLanguages.map(([language, percentage], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"language-bar-item\",\n          style: {\n            width: `${percentage}%`,\n            backgroundColor: colors[index % colors.length]\n          }\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(Languages, \"HP0BBuSYT6JlvxHseIygnS8dnqM=\");\n_c = Languages;\nexport default Languages;\nvar _c;\n$RefreshReg$(_c, \"Languages\");","map":{"version":3,"names":["React","useState","useEffect","LanguageFocus","jsxDEV","_jsxDEV","Languages","userRepos","_s","topLanguages","setTopLanguages","selectedLanguage","setSelectedLanguage","selectedLanguageRatio","setSelectedLanguageRatio","languageRepos","setLanguageRepos","colors","languageCount","totalSize","forEach","repo","Object","keys","languages","language","languageValue","languagePercentages","fromEntries","entries","map","count","sortedLanguages","sort","a","b","slice","length","toFixed","filterLanguageRepos","handleLanguageClick","languageData","find","lang","_","filteredRepos","filter","hasOwnProperty","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_percentage","index","onClick","style","backgroundColor","languageRatio","percentage","width","_c","$RefreshReg$"],"sources":["C:/Users/blake/LearnReact/React/git-track/client/src/components/Languages.js"],"sourcesContent":["import React from 'react'\r\nimport '../styling/languages.css'\r\nimport './LanguageFocus'\r\nimport { useState, useEffect } from 'react'\r\nimport LanguageFocus from './LanguageFocus'\r\n\r\n\r\n\r\n\r\n\r\nconst Languages = ({ userRepos }) => {\r\n    const [topLanguages, setTopLanguages] = useState([]);\r\n    const [selectedLanguage, setSelectedLanguage] = useState();\r\n    const [selectedLanguageRatio, setSelectedLanguageRatio] = useState();\r\n    const [languageRepos, setLanguageRepos] = useState([]); // New state for repositories of the selected language\r\n\r\n    const colors = ['#FF6666', '#63618E', '#FFA500', '#20B2AA', '#FFD700', '#D3FFCE', '#F633FF', '#FF8833', '#33FF88', '#8833FF'];\r\n\r\n    useEffect(() => {\r\n        if (!userRepos) \r\n            return;\r\n\r\n        const languageCount = {};\r\n        let totalSize = 0;\r\n\r\n        userRepos.forEach(repo => {\r\n            Object.keys(repo.languages).forEach(language => {\r\n                const languageValue = repo.languages[language];\r\n                languageCount[language] = (languageCount[language] || 0) + languageValue;\r\n                totalSize += languageValue;\r\n            });\r\n        });\r\n\r\n        const languagePercentages = Object.fromEntries(\r\n            Object.entries(languageCount).map(([language, count]) => [language, (count / totalSize) * 100])\r\n        );\r\n    \r\n        const sortedLanguages = Object.entries(languagePercentages).sort((a, b) => b[1] - a[1]).slice(0, 6);\r\n        setTopLanguages(sortedLanguages);\r\n\r\n        if (sortedLanguages.length > 0) {\r\n            setSelectedLanguage(sortedLanguages[0][0]);\r\n            setSelectedLanguageRatio(sortedLanguages[0][1].toFixed(1));\r\n            filterLanguageRepos(sortedLanguages[0][0]);\r\n        }\r\n    }, [userRepos]);\r\n\r\n    const handleLanguageClick = (language) => {\r\n        setSelectedLanguage(language);\r\n        const languageData = topLanguages.find(([lang, _]) => lang === language);\r\n        if (languageData) {\r\n            setSelectedLanguageRatio(languageData[1].toFixed(1));\r\n        }\r\n        filterLanguageRepos(language);\r\n    };\r\n\r\n    const filterLanguageRepos = (language) => {\r\n        const filteredRepos = userRepos.filter(repo => repo.languages.hasOwnProperty(language));\r\n        setLanguageRepos(filteredRepos);\r\n    };\r\n\r\n    return (\r\n        <div className='language-container'>\r\n            <div className='languages'>\r\n                <div className='language-list'>\r\n                    <div className='label'>\r\n                        <h1>LANGUAGES</h1>\r\n                    </div>\r\n                    <div className='list'>\r\n                        <ol className='language'>\r\n                            {topLanguages.map(([language, _percentage], index) => (\r\n                                <li key={index} className='language-item' onClick={() => handleLanguageClick(language)}>\r\n                                    <div className='language-color' style={{ backgroundColor: colors[index % colors.length] }}></div>\r\n                                    <a><span className='language-name'>{language}</span></a>\r\n                                </li>\r\n                            ))}\r\n                        </ol>\r\n                    </div>\r\n                </div>\r\n                <div className='language-focus'>\r\n                    <div className='focus'>\r\n                        <LanguageFocus language={ selectedLanguage } languageRatio={ selectedLanguageRatio }/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='language-bar-container'>\r\n                <div className='language-bar'>\r\n                    {topLanguages.map(([language, percentage], index) => (\r\n                        <div \r\n                            key={index} \r\n                            className='language-bar-item' \r\n                            style={{ \r\n                                width: `${percentage}%`, \r\n                                backgroundColor: colors[index % colors.length]\r\n                            }}\r\n                        >\r\n                        </div>\r\n                    \r\n                    ))}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Languages"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}