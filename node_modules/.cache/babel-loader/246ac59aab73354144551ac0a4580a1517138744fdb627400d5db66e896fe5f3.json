{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blake\\\\LearnReact\\\\React\\\\git-track\\\\client\\\\src\\\\pages\\\\userPageWrapper.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Navbar from '../components/Navbar';\nimport HomePage from './HomePage';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPageWrapper = props => {\n  _s();\n  const [userData, setUserData] = useState(null); // JSON     {}\n  const [userRepos, setUserRepos] = useState(null); // Array    []\n\n  const handleSearch = async username => {\n    try {\n      const userResponse = await fetch(`https://api.github.com/${username}`, {\n        method: \"GET\",\n        headers: {\n          \"Authorization\": localStorage.getItem(\"accessToken\")\n        }\n      }).then(response => {\n        return response.json();\n      }).then(data => {});\n      const response = await fetch(`http://localhost:4000/getRepoData?username=${username}`, {\n        method: \"GET\",\n        headers: {\n          \"Authorization\": \"Bearer \" + localStorage.getItem(\"accessToken\")\n        }\n      });\n      if (!response.ok) throw new Error('Failed to fetch repository data');\n      const data = await response.json();\n      setUserRepos(data);\n    } catch (error) {\n      console.error(\"Failed to fetch user data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HomePage, {\n      searchUserData: userData,\n      searchUserRepos: userRepos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 9\n  }, this);\n};\n_s(UserPageWrapper, \"r6F8P4K6pRV3dxTsRy9kVUS/rMw=\");\n_c = UserPageWrapper;\nexport default UserPageWrapper;\nvar _c;\n$RefreshReg$(_c, \"UserPageWrapper\");","map":{"version":3,"names":["React","Navbar","HomePage","useState","useEffect","jsxDEV","_jsxDEV","UserPageWrapper","props","_s","userData","setUserData","userRepos","setUserRepos","handleSearch","username","userResponse","fetch","method","headers","localStorage","getItem","then","response","json","data","ok","Error","error","console","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","searchUserData","searchUserRepos","_c","$RefreshReg$"],"sources":["C:/Users/blake/LearnReact/React/git-track/client/src/pages/userPageWrapper.js"],"sourcesContent":["import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport HomePage from './HomePage';\r\nimport { useState, useEffect } from 'react'\r\n\r\nconst UserPageWrapper = (props) => {\r\n\r\n    const [userData, setUserData] = useState(null);         // JSON     {}\r\n    const [userRepos, setUserRepos] = useState(null);       // Array    []\r\n\r\n\r\n    const handleSearch = async (username) => {\r\n        try {\r\n            const userResponse = await fetch(`https://api.github.com/${ username }`, {\r\n                method: \"GET\",\r\n                headers: {\r\n                    \"Authorization\": localStorage.getItem(\"accessToken\")\r\n                }\r\n            }).then((response) => {\r\n                return response.json()\r\n            }).then((data) => {\r\n            })\r\n\r\n\r\n            const response = await fetch(`http://localhost:4000/getRepoData?username=${username}`, {\r\n                method: \"GET\",\r\n                headers: { \"Authorization\": \"Bearer \" + localStorage.getItem(\"accessToken\") }\r\n            });\r\n\r\n            if (!response.ok) \r\n                throw new Error('Failed to fetch repository data');\r\n            const data = await response.json();\r\n                setUserRepos(data);\r\n            \r\n        } catch (error) {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        }\r\n    };\r\n    return (\r\n        <div>\r\n            <Navbar onSearch={ handleSearch }/>\r\n            <HomePage searchUserData={ userData } searchUserRepos={ userRepos } />\r\n        </div>\r\n    );\r\n    };\r\n\r\nexport default UserPageWrapper;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,QAAQ,MAAM,YAAY;AACjC,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,eAAe,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAE/B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAS;EACxD,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAO;;EAGxD,MAAMW,YAAY,GAAG,MAAOC,QAAQ,IAAK;IACrC,IAAI;MACA,MAAMC,YAAY,GAAG,MAAMC,KAAK,CAAE,0BAA0BF,QAAU,EAAC,EAAE;QACrEG,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UACL,eAAe,EAAEC,YAAY,CAACC,OAAO,CAAC,aAAa;QACvD;MACJ,CAAC,CAAC,CAACC,IAAI,CAAEC,QAAQ,IAAK;QAClB,OAAOA,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC1B,CAAC,CAAC,CAACF,IAAI,CAAEG,IAAI,IAAK,CAClB,CAAC,CAAC;MAGF,MAAMF,QAAQ,GAAG,MAAMN,KAAK,CAAE,8CAA6CF,QAAS,EAAC,EAAE;QACnFG,MAAM,EAAE,KAAK;QACbC,OAAO,EAAE;UAAE,eAAe,EAAE,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa;QAAE;MAChF,CAAC,CAAC;MAEF,IAAI,CAACE,QAAQ,CAACG,EAAE,EACZ,MAAM,IAAIC,KAAK,CAAC,iCAAiC,CAAC;MACtD,MAAMF,IAAI,GAAG,MAAMF,QAAQ,CAACC,IAAI,CAAC,CAAC;MAC9BX,YAAY,CAACY,IAAI,CAAC;IAE1B,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACtD;EACJ,CAAC;EACD,oBACItB,OAAA;IAAAwB,QAAA,gBACIxB,OAAA,CAACL,MAAM;MAAC8B,QAAQ,EAAGjB;IAAc;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eACnC7B,OAAA,CAACJ,QAAQ;MAACkC,cAAc,EAAG1B,QAAU;MAAC2B,eAAe,EAAGzB;IAAW;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrE,CAAC;AAEV,CAAC;AAAC1B,EAAA,CAvCAF,eAAe;AAAA+B,EAAA,GAAf/B,eAAe;AAyCrB,eAAeA,eAAe;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}