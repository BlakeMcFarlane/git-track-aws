{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blake\\\\LearnReact\\\\React\\\\git-track\\\\client\\\\src\\\\components\\\\Languages.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport '../styling/languages.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Languages = ({\n  userRepos\n}) => {\n  _s();\n  const [topLanguages, setTopLanguages] = useState([]);\n  const colors = ['#FF6666', '#63618E', '#FFA500', '#20B2AA', '#FFD700', '#D3FFCE', '#F633FF', '#FF8833', '#33FF88', '#8833FF'];\n  useEffect(() => {\n    if (!userRepos) return; // Add a check to ensure userRepos is defined\n\n    const languageCount = {};\n    let totalSize = 0;\n    userRepos.forEach(repo => {\n      Object.keys(repo.languages).forEach(language => {\n        const languageValue = repo.languages[language];\n        languageCount[language] = (languageCount[language] || 0) + languageValue;\n        totalSize += languageValue;\n      });\n    });\n    const languagePercentages = Object.fromEntries(Object.entries(languageCount).map(([language, count]) => [language, count / totalSize * 100]));\n    setTopLanguages(Object.entries(languagePercentages).sort((a, b) => b[1] - a[1]));\n  }, [userRepos]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"language-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"languages\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-list\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"label\",\n          children: /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"LANGUAGES\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"list\",\n          children: /*#__PURE__*/_jsxDEV(\"ol\", {\n            className: \"language\",\n            children: topLanguages.map(([language, _percentage], index) => /*#__PURE__*/_jsxDEV(\"li\", {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"language-color\",\n                style: {\n                  backgroundColor: colors[index % colors.length],\n                  width\n                }\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 49\n              }, this), language]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-focus\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"focus\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"language-bar\",\n      children: topLanguages.map(([language, percentage], index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"language-bar-item\",\n        style: {\n          width: `${percentage}%`,\n          backgroundColor: colors[index % colors.length] // Loop through colors\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(Languages, \"17NV4Asm5uVGUG63x42P3MPieG8=\");\n_c = Languages;\nexport default Languages;\nvar _c;\n$RefreshReg$(_c, \"Languages\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Languages","userRepos","_s","topLanguages","setTopLanguages","colors","languageCount","totalSize","forEach","repo","Object","keys","languages","language","languageValue","languagePercentages","fromEntries","entries","map","count","sort","a","b","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_percentage","index","style","backgroundColor","length","width","percentage","_c","$RefreshReg$"],"sources":["C:/Users/blake/LearnReact/React/git-track/client/src/components/Languages.js"],"sourcesContent":["import React from 'react'\r\nimport '../styling/languages.css'\r\nimport { useState, useEffect } from 'react'\r\n\r\nconst Languages = ({ userRepos }) => {\r\n    const [topLanguages, setTopLanguages] = useState([]);\r\n    const colors = ['#FF6666', '#63618E', '#FFA500', '#20B2AA', '#FFD700', '#D3FFCE', '#F633FF', '#FF8833', '#33FF88', '#8833FF'];\r\n\r\n\r\n    useEffect(() => {\r\n        if (!userRepos) \r\n            return; // Add a check to ensure userRepos is defined\r\n\r\n        const languageCount = {};\r\n        let totalSize = 0;\r\n\r\n        userRepos.forEach(repo => {\r\n            Object.keys(repo.languages).forEach(language => {\r\n                const languageValue = repo.languages[language]\r\n                languageCount[language] = (languageCount[language] || 0) + languageValue;\r\n                totalSize += languageValue;\r\n            });\r\n        });\r\n\r\n        const languagePercentages = Object.fromEntries(\r\n            Object.entries(languageCount).map(([language, count]) => [language, (count / totalSize) * 100])\r\n        );\r\n    \r\n        setTopLanguages(Object.entries(languagePercentages).sort((a, b) => b[1] - a[1]));\r\n\r\n    }, [userRepos]);\r\n\r\n    return (\r\n        <div className='language-container'>\r\n            <div className='languages'>\r\n                <div className='language-list'>\r\n                    <div className='label'>\r\n                        <h1>LANGUAGES</h1>\r\n                    </div>\r\n                    <div className='list'>\r\n                        <ol className='language'>\r\n                            {topLanguages.map(([language, _percentage], index) => (\r\n                                <li key={index}><div key={index} className='language-color' style={{ \r\n                                    backgroundColor: colors[index % colors.length],\r\n                                    width\r\n                                }}></div>{language}</li>\r\n                            ))}\r\n                        </ol>\r\n                    </div>\r\n\r\n                </div>\r\n                <div className='language-focus'>\r\n                    <div className='focus'>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className='language-bar'>\r\n                {topLanguages.map(([language, percentage], index) => (\r\n                    <div \r\n                        key={index} \r\n                        className='language-bar-item' \r\n                        style={{ \r\n                            width: `${percentage}%`, \r\n                            backgroundColor: colors[index % colors.length]  // Loop through colors\r\n                        }}\r\n                    >\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Languages"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}