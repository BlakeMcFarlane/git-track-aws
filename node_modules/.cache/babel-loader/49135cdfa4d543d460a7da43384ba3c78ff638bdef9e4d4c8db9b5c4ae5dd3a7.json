{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\blake\\\\LearnReact\\\\React\\\\git-track\\\\client\\\\src\\\\pages\\\\userPageWrapper.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport Navbar from '../components/Navbar';\nimport HomePage from './HomePage';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserPageWrapper = props => {\n  _s();\n  const [userData, setUserData] = useState(null); // JSON     {}\n  const [userRepos, setUserRepos] = useState(null); // Array    []\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const userData = await getUserData();\n        if (userData.login) {\n          await getRepoData(userData.login);\n        }\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, []);\n  const getRepoData = async username => {\n    const response = await fetch(`http://localhost:4000/getRepoData?username=${username}`, {\n      method: \"GET\",\n      headers: {\n        \"Authorization\": \"Bearer \" + localStorage.getItem(\"accessToken\")\n      }\n    });\n    if (!response.ok) throw new Error('Failed to fetch repository data');\n    const data = await response.json();\n    setUserRepos(data);\n  };\n  const handleSearch = async username => {\n    try {\n      const userResponse = await fetch(`https://api.github.com/users/${username}`);\n      const userData = await userResponse.json();\n      setUserData(userData);\n      console.log(userData);\n      const reposResponse = await fetch(`https://api.github.com/users/${username}/repos`, {\n        method: \"GET\",\n        headers: {\n          \"Authorization\": \"Bearer \" + localStorage.getItem(\"accessToken\")\n        }\n      });\n      console.log(\"TEST\" + reposResponse);\n      if (!reposResponse.ok) {\n        throw new Error('Failed to fetch repository data');\n      }\n      const data = await reposResponse.json();\n      setUserRepos(data);\n    } catch (error) {\n      console.error(\"Failed to fetch user data:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(HomePage, {\n      searchUserData: userData,\n      searchUserRepos: userRepos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(UserPageWrapper, \"hhQPVfKdLsWd2lqx37A5cBSZyM8=\");\n_c = UserPageWrapper;\nexport default UserPageWrapper;\nvar _c;\n$RefreshReg$(_c, \"UserPageWrapper\");","map":{"version":3,"names":["React","Navbar","HomePage","useState","useEffect","jsxDEV","_jsxDEV","UserPageWrapper","props","_s","userData","setUserData","userRepos","setUserRepos","fetchData","getUserData","login","getRepoData","error","console","username","response","fetch","method","headers","localStorage","getItem","ok","Error","data","json","handleSearch","userResponse","log","reposResponse","children","onSearch","fileName","_jsxFileName","lineNumber","columnNumber","searchUserData","searchUserRepos","_c","$RefreshReg$"],"sources":["C:/Users/blake/LearnReact/React/git-track/client/src/pages/userPageWrapper.js"],"sourcesContent":["import React from 'react';\r\nimport Navbar from '../components/Navbar';\r\nimport HomePage from './HomePage';\r\nimport { useState, useEffect } from 'react'\r\n\r\nconst UserPageWrapper = (props) => {\r\n\r\n    const [userData, setUserData] = useState(null);         // JSON     {}\r\n    const [userRepos, setUserRepos] = useState(null);       // Array    []\r\n\r\n    useEffect(() => {\r\n\r\n        const fetchData = async () => {\r\n            try {\r\n              const userData = await getUserData();\r\n              if (userData.login) {\r\n                await getRepoData(userData.login)\r\n        \r\n              }\r\n            } catch (error) {\r\n              console.error(\"Error fetching data:\", error);\r\n            }\r\n          };\r\n      \r\n          fetchData();\r\n\r\n    }, [])\r\n\r\n    const getRepoData = async (username) => {\r\n        const response = await fetch(`http://localhost:4000/getRepoData?username=${username}`, {\r\n          method: \"GET\",\r\n          headers: { \"Authorization\": \"Bearer \" + localStorage.getItem(\"accessToken\") }\r\n        });\r\n    \r\n        if (!response.ok) throw new Error('Failed to fetch repository data');\r\n        const data = await response.json();\r\n        setUserRepos(data);\r\n    }\r\n\r\n\r\n    const handleSearch = async (username) => {\r\n        try {\r\n            const userResponse = await fetch(`https://api.github.com/users/${username}`);\r\n            const userData = await userResponse.json();\r\n            setUserData(userData);\r\n            console.log(userData)\r\n\r\n            const reposResponse = await fetch((`https://api.github.com/users/${username}/repos`), {\r\n                method: \"GET\",\r\n                headers: { \"Authorization\": \"Bearer \" + localStorage.getItem(\"accessToken\") }\r\n              });\r\n              console.log(\"TEST\" + reposResponse)\r\n              if (!reposResponse.ok) {\r\n                throw new Error('Failed to fetch repository data');\r\n              }\r\n\r\n              const data = await reposResponse.json();\r\n              setUserRepos(data);\r\n            }\r\n        catch (error) {\r\n            console.error(\"Failed to fetch user data:\", error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Navbar onSearch={ handleSearch }/>\r\n            <HomePage searchUserData={ userData } searchUserRepos={ userRepos } />\r\n        </div>\r\n    );\r\n    };\r\n\r\nexport default UserPageWrapper;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}